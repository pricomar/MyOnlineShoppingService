<?xml version="1.0" encoding="UTF-8"?>
<con:testCase xmlns:con="http://eviware.com/soapui/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" id="2d53bd74-d67e-4829-af1c-5d3639ce5a9f" keepSession="false" name="Test Case for scritps" searchProperties="true" timeout="0">
  <con:settings id="1b5625f7-4217-4548-9efd-e3a2eaa90a07">
    <con:setting id="IncludeOverview">true</con:setting>
    <con:setting id="IncludeResults">true</con:setting>
    <con:setting id="FlowLayout">false</con:setting>
    <con:setting id="ErrorDetails">true</con:setting>
    <con:setting id="IncludeCoverage">true</con:setting>
    <con:setting id="6412b7ba-b9a3-4f85-a637-a43cfb8edf97fileName">Test-Case-for-scritps</con:setting>
    <con:setting id="2d53bd74-d67e-4829-af1c-5d3639ce5a9ffileName">Test-Case-for-scritps</con:setting>
  </con:settings>
  <con:testStep id="fb9b6adb-9bda-488f-8de3-ed7c0a755cee" name="getOne" type="restrequest">
    <con:settings/>
    <con:config xsi:type="con:RestRequestStep" methodName="GET" resourcePath="/api/v1/Books/{id}" service="FakeRESTApi.Web V1">
      <con:restRequest id="2379b833-ed65-4657-9783-d373dd12c9d5" mediaType="application/json" name="getOne">
        <con:description/>
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://fakerestapi.azurewebsites.net/</con:endpoint>
        <con:request/>
        <con:originalUri>https://fakerestapi.azurewebsites.net/api/v1/Books/2</con:originalUri>
        <con:assertion id="2e3e231f-a4b6-464c-9924-1157dd225d4e" name="Valid HTTP Status Codes" type="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion id="50ecda90-a633-488f-abb6-54e7dc969db9" name="Response SLA" type="Response SLA Assertion">
          <con:configuration>
            <SLA>700</SLA>
          </con:configuration>
        </con:assertion>
        <con:assertion id="27746681-f4d6-41bb-a82d-5a55b44cbdcf" name="Script Assertion" type="GroovyScriptAssertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonSlurper

log.info("Executing validate response script...")
def response = messageExchange.response

// show headers
def headers = response.responseHeaders
for (var aHeader in headers){
	log.info("aHeader: ${aHeader}")
}

// assert status
String status = headers.get("#status#")
log.info("status: ${status}")
assert (status.indexOf("200") >=0)

// assert body
def bodyStr = response.contentAsString
log.info("bodyStr: ${bodyStr}")

// transform to json
def parser = new JsonSlurper()

def jsonResp = parser.parseText(bodyStr)
def title = jsonResp.title

log.info("title: ${title}")

assert title ==~ /Book [0-9]{1,}/</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="id" value="2"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>id</con:entry>
        </con:parameterOrder>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep id="a6e306ed-334c-408e-9108-197422be5f98" name="Update test case prop" type="groovy">
    <con:settings/>
    <con:config>
      <script>log.info("============= SCRIPT UDPATE PROP =================I")

def propToUpdatte = 'MyProp'
def newValue = 'new Value'

// --- Con context
def currTescCase = context.getTestCase()
log.info("Test case:: ${ currTescCase.name}")

def tcProps =  currTescCase.properties

for (var aProp  in tcProps){
	log.info("Prop: ${aProp.key}")
	if(aProp.key == propToUpdatte){
		aProp.setValue(newValue);
		break
	}
}

def aProp = currTescCase.getProperty(propToUpdatte)
aProp.setValue(newValue);

// con testrunner
def prop2ToUpdate = 'SecProp'
def newValue2 = 'new Value 2'
testRunner.getTestCase().getProperty(prop2ToUpdate).setValue(newValue2)

// update with previous result
def testResults = testRunner.results
def result = ''
def  stepName = "getOne"

for( aResp in testResults ){
	log.info ">  TestStep [" + aResp.testStep.name + "] finished with status " + aResp.status
	if( aResp.testStep.name == stepName){		
		result = aResp.responseContent
		//break;
	}
}

testRunner.getTestCase().getProperty(prop2ToUpdate).setValue(result)
log.info("Test case prop 2: ${testRunner.getTestCase().getProperty(prop2ToUpdate).getValue()} ")</script>
    </con:config>
  </con:testStep>
  <con:testStep id="bb3e312d-6c90-4ef1-984e-19e9f57a7901" name="Lib use" type="groovy">
    <con:settings/>
    <con:config>
      <script>import Callee

c = new Callee()
log.info(c.hello())

Callee.salute("Ricardo",log)</script>
    </con:config>
  </con:testStep>
  <con:testStep id="78bf04fb-5a5d-4df1-9204-e405badaca76" name="Access assertions" type="groovy">
    <con:settings/>
    <con:config>
      <script>log.info("============= SCRIPT ACCESS ASSERTIONS  =================I")

testRunner.testCase.testSteps.each{ name,props ->
    log.info "Test step name: $name"
    // check that the testStep class support assertions     
    if(props.metaClass.respondsTo(props, "getAssertionList")){
        // get assertionList
        props.getAssertionList().each{
           log.info "-Assertion:  $it.label - $it.status"
        }
    }
}

log.info("END....")</script>
    </con:config>
  </con:testStep>
  <con:testStep id="484b7f6b-9656-4fb3-8850-82766fb3d04e" name="Save results" type="datasink">
    <con:settings/>
    <con:config xsi:type="con:DataSinkStep">
      <con:dataSink type="Groovy">
        <con:configuration>
          <script>import groovy.sql.Sql
import java.util.Date   

log.info("Storing results scrpit...")


def stepName = "getOne"

// DB params
try{
	def sql = Sql.newInstance('jdbc:mysql://localhost:3306/productsdb', 'products_user', 'rapi123', 'com.mysql.jdbc.Driver')
	sql.connection.autoCommit = false
}catch(Exception ex){
	log.error("Error conectándose: ${ex}")
	//testRunner.fail("Error de conexión")
}

Date date = new Date()
def fecha = date.format( 'yyyy-MM-dd' )
def testStepName = 'login user'

String status = '';
def passed

/* Using a property */
/*
def testStep =  context.testCase.getTestStepByName("Guardar token")
def stepProperty = testStep.getProperty("token")
def passed = stepProperty.getValue()!=null
*/

/* Rerunning a step */

/*
def rtestStep =  context.testCase.getTestStepByName(stepName)
String status = testRunner.runTestStep(rtestStep).status
passed = status.equals("PASS")
log.info("status: ${status}")*/

/* Searching for results */
log.info("results: ${testRunner.results}")
for( r in testRunner.results ){
	log.info "*** TestStep [" + r.testStep.name + "] finished with status " + r.status
	if(stepName == r.testStep.name){		
		status = r.status
		break;
	}
}

if(status != ''){
	passed = status.equals("PASS")
	// Geneate query
	def sqlstr = "INSERT INTO results (fecha,teststepname,resultado) VALUES (${fecha},${stepName}, ${passed})" 
	log.info("sqlstr: ${sqlstr}")	
	
	// Insert
	try {
		sql.execute(sqlstr);
		sql.commit()
		log.info("Successfully committed")
	}catch(Exception ex) {
		sql.rollback()
		log.error("Transaction rollback: ${ex}")		
	}
	
	sql.close()
}</script>
        </con:configuration>
      </con:dataSink>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>MyProp</con:name>
      <con:value>new Value</con:value>
    </con:property>
    <con:property>
      <con:name>SecProp</con:name>
      <con:value>{"id":2,"title":"Book 2","description":"Accusam dolore kasd justo te accumsan minim dolor liber ipsum. Tempor duo dolores dolor dolor enim velit sed ea nonumy eos. Magna stet erat diam possim aliquam tation diam erat sanctus ipsum ea et et. Stet nulla no suscipit ipsum sadipscing invidunt sea augue. Ut elitr sadipscing sed nonumy suscipit eirmod et molestie dolore. Nihil dolor lorem aliquyam kasd ut diam erat elit amet gubergren kasd iusto voluptua ea magna sit aliquyam duo. Et sea consetetur dolores molestie duis sea lorem tation sit. Eirmod voluptua wisi dolore consetetur ipsum quod eros dolores accusam imperdiet eu dolore sit duis dolores labore. Dolor duo veniam vel imperdiet laoreet et dolor et est. Ipsum sit aliquyam invidunt kasd elitr sed kasd sed amet aliquyam dolore. Sit et iusto et rebum. Elitr diam magna clita placerat amet iusto vel erat invidunt sit et takimata blandit. Et est et sit vel dolores dolore ad kasd magna magna diam. Ad elit magna labore illum magna voluptua erat sed stet. Dolor nostrud lorem invidunt consetetur in zzril amet luptatum justo eos ex sed rebum dolor diam voluptua sit. Sed kasd qui euismod ad ea rebum duis est molestie ad accusam erat vero et duo labore clita. Labore feugiat consequat. Dolor elitr dolores liber esse duo sed consectetuer gubergren duis. Sea et dignissim elitr invidunt clita et at.\n","pageCount":200,"excerpt":"Consequat ipsum facilisi dolore ut clita tempor erat et euismod eum eirmod ullamcorper suscipit consetetur amet. Elitr sed stet illum et. Est elitr nonumy sit diam est lorem consequat tempor erat. Dolore et erat erat erat tation sit amet lorem sanctus erat amet nonumy ea exerci invidunt. Et eum sed sed lorem. Aliquyam et illum dolor accusam nulla stet imperdiet accusam elitr vero liber. Rebum stet lorem diam stet amet amet luptatum nibh rebum clita stet accusam amet adipiscing et diam dolor. Consetetur diam eleifend et est sanctus takimata erat invidunt ipsum vel. Duis rebum amet at est accusam. Takimata sed ipsum sit lorem invidunt aliquyam invidunt. Elitr nibh elitr et ut eirmod magna invidunt sit takimata no sit elitr et sit autem sit takimata ut. Dolor sit vel nonumy. Rebum no labore sit dolor sanctus dolores vero accusam et gubergren clita lorem option nulla qui blandit vero sed. Vel magna gubergren nonumy eos amet eirmod velit dolor tempor accumsan eirmod. Sed stet est dolor takimata possim facilisis luptatum eros hendrerit rebum illum voluptua. Te sadipscing possim iusto lorem consetetur praesent ipsum voluptua vel sit possim consetetur elitr kasd.\nStet sed dolore facer sanctus rebum voluptua mazim voluptua eirmod diam magna no dignissim amet eos sadipscing clita. Dolore luptatum no sit ad. Lorem eros takimata dolor ipsum aliquam et lorem sit eirmod eum lorem labore. Ut vel lorem vel. Augue sit erat hendrerit amet voluptua amet sadipscing invidunt aliquip duo rebum accusam vero invidunt sanctus at. Nulla sadipscing tempor erat odio dolor.\nEros feugiat et amet. Facer justo ipsum sed iriure dolore et amet eos clita quis ipsum. Voluptua clita sanctus stet dolor et dolores congue takimata dolore. Erat tempor eirmod et rebum ad sit kasd nonumy justo erat ea exerci. Quis ea clita at elit. Iriure nonumy sea eirmod vero nihil. Sadipscing diam et amet vero labore sed assum at odio nostrud eos. Et rebum esse. Amet kasd exerci takimata est est sadipscing sit consetetur nonumy nonumy dolor tation rebum ut voluptua. Voluptua facilisi kasd feugiat magna aliquam commodo elitr consequat ex veniam augue iusto suscipit laoreet sit sea. Invidunt no kasd duo stet consetetur nonumy vel no dolor sed clita at consetetur feugait facer. Diam et velit sed in invidunt kasd dolor kasd. Elitr nobis accusam voluptua eros volutpat duo diam ipsum dolore dolor sit duo eirmod et rebum justo iusto. Dolor eos vero exerci exerci aliquyam eos amet tation ipsum et ut wisi amet volutpat tempor rebum clita dolor. Vero luptatum rebum velit dolores in dolore vel et delenit aliquyam takimata nonumy ad. Sea voluptua feugiat at adipiscing no illum est zzril sit sed sed wisi esse lorem takimata. Eirmod diam clita et sadipscing liber et consetetur facilisis ea invidunt amet eos ipsum eros. Laoreet dolores ut vulputate.\nIusto et vero eos sit sed takimata eirmod ipsum lorem diam ut doming. Diam invidunt labore takimata sanctus vel sanctus et lorem consectetuer kasd duo duo et no zzril magna quis et. Invidunt dolore elitr takimata gubergren option consequat accusam aliquyam volutpat diam. Dolor justo ea sadipscing sanctus sit tempor aliquam mazim eos amet sit diam. Elitr sed in eu amet gubergren dolores diam consetetur no labore liber sed. Consetetur delenit et autem dolore vero at amet accusam delenit.\nErat ut labore dolore tempor amet. Lorem tempor in sanctus iriure nonumy lorem. Elit lorem sit ea blandit at elitr ea sadipscing eos amet iriure. Stet in tempor diam vero vero sanctus accumsan eirmod magna dignissim magna. Nibh liber sadipscing gubergren dolor esse justo velit et feugiat gubergren diam erat hendrerit dolore vero sadipscing. Eu id labore hendrerit labore eos voluptua at feugiat. Sea amet dolor rebum eum erat. Nonumy takimata odio et est. Sea et elitr velit enim vulputate labore et soluta takimata aliquyam sea kasd vero no. Aliquyam ut et amet nostrud vel eu clita sanctus erat accusam et.\n","publishDate":"2024-11-10T09:34:41.6607633+00:00"}</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
</con:testCase>
